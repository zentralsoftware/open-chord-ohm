@misc{JAVA,
    author = "Sun Microsystems, Inc.",
    title = "Java 2 Platform, Standard Edition (J2SE) 5.0",
    howpublished = "http://java.sun.com/j2se/1.5.0/download.jsp",
    year = "2005",
}

@misc{GPL,
    author = "Free Software Foundation, Inc.",
    title = "GNU General Public License",
    howpublished = "http://www.gnu.org/copyleft/gpl.html",
    year = "1991",
}

@INPROCEEDINGS{stoica01chord,
  author = {Ion Stoica and Robert Morris and David Karger and M. Frans Kaashoek
	and Hari Balakrishnan},
  title = {Chord: A scalable peer-to-peer lookup service for internet applications},
  booktitle = {Proceedings of the 2001 conference on applications, technologies,
	architectures, and protocols for computer communications},
  year = {2001},
  pages = {149-160},
  publisher = {ACM Press},
  abstract = {A fundamental problem that confronts peer-to-peer applications is
	to efficiently locate the node that stores a particular data item.
	This paper presents Chord, a distributed lookup protocol that addresses
	this problem. Chord provides support for just one operation: given
	a key, it maps the key onto a node. Data location can be easily
	implemented on top of Chord by associating a key with each data
	item, and storing the key/data item pair at the node to which the
	key maps. Chord adapts efficiently as nodes join and leave the system,
	and can answer queries even if the system is continuously changing.
	Results from theoretical analysis, simulations, and experiments
	show that Chord is scalable, with communication cost and the state
	maintained by each node scaling logarithmically with th e number
	of Chord nodes.},
  citeseerurl = {http://citeseer.ist.psu.edu/442155.html},
  doi = {http://doi.acm.org/10.1145/383059.383071},
  keywords = {P2P, Distributed Hash Table},
  owner = {sven},
  pdf = {P2P\stoica01chord.pdf},
  url = {http://citeseer.ist.psu.edu/442155.html},
}

@misc{christudas05internals,
    author = "Binildas Christudas",
    title = "Internals of Java Class Loading",
    howpublished = "http://www.onjava.com/pub/a/onjava/2005/01/26/classloading.html",
    url = "http://www.onjava.com/pub/a/onjava/2005/01/26/classloading.html",
    month = "January",
    year = "2005",
}
